# Generated by Django 3.2.6 on 2021-08-09 03:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the country', max_length=50)),
                ('abbr', models.CharField(help_text="Enter the country's abbreviation", max_length=10)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the county', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Counties',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the state', max_length=50)),
                ('abbr', models.CharField(help_text="Enter the state's abbrevation", max_length=10)),
                ('country', models.ForeignKey(help_text="Select the state's country", on_delete=django.db.models.deletion.CASCADE, related_name='states', to='geography.country')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter the locality's name", max_length=100)),
                ('range', models.CharField(help_text='Enter the distance and direction of this locality from the nearest town', max_length=10)),
                ('town', models.CharField(help_text='Enter the nearest town', max_length=50)),
                ('country', models.ForeignKey(help_text="Select the locality's country", on_delete=django.db.models.deletion.CASCADE, related_name='localities', to='geography.country')),
                ('county', models.ForeignKey(help_text="Select the locality's county", on_delete=django.db.models.deletion.CASCADE, related_name='counties', to='geography.county')),
                ('state', models.ForeignKey(help_text="Select the locality's state", on_delete=django.db.models.deletion.CASCADE, related_name='states', to='geography.state')),
            ],
            options={
                'verbose_name_plural': 'Localities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GPS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=10, help_text='Enter the latitude', max_digits=13)),
                ('longitude', models.DecimalField(decimal_places=10, help_text='Enter the longitude', max_digits=13)),
                ('elevation', models.DecimalField(decimal_places=2, help_text='Enter the elevation in meters', max_digits=6)),
                ('locality', models.ForeignKey(help_text='Select the locality for this set of coordinates', on_delete=django.db.models.deletion.CASCADE, related_name='GPS_coordinates', to='geography.locality')),
            ],
            options={
                'verbose_name_plural': 'GPS coordinates',
                'ordering': ['latitude', 'longitude'],
            },
        ),
        migrations.AddField(
            model_name='county',
            name='state',
            field=models.ForeignKey(help_text="Select the county's state", on_delete=django.db.models.deletion.CASCADE, related_name='counties', to='geography.state'),
        ),
        migrations.CreateModel(
            name='CollectingTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for the trip', max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('notes', models.TextField()),
                ('states', models.ManyToManyField(to='geography.State')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
