# Generated by Django 3.2.6 on 2021-08-07 19:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the scientific name', max_length=100)),
                ('common_name', models.CharField(help_text='Enter the common name', max_length=100)),
                ('authority', models.CharField(help_text='Enter the authority', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Families',
            },
        ),
        migrations.CreateModel(
            name='Genus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the scientific name', max_length=100)),
                ('common_name', models.CharField(help_text='Enter the common name', max_length=100)),
                ('authority', models.CharField(help_text='Enter the authority', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Genera',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the scientific name', max_length=100)),
                ('common_name', models.CharField(help_text='Enter the common name', max_length=100)),
                ('authority', models.CharField(help_text='Enter the authority', max_length=100)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the scientific name', max_length=100)),
                ('common_name', models.CharField(help_text='Enter the common name', max_length=100)),
                ('authority', models.CharField(help_text='Enter the authority', max_length=100)),
                ('mona', models.DecimalField(blank=True, decimal_places=2, help_text='Enter the MONA (Hodges) # for the species (Lepidoptera only', max_digits=8, null=True)),
                ('p3', models.DecimalField(blank=True, decimal_places=2, help_text='Enter the P3 (Pohl, Patterson, Pelham 2016) # for the species (Lepidoptera only)', max_digits=8, null=True)),
                ('genus', models.ForeignKey(help_text='Select the genus to which this species belongs', on_delete=django.db.models.deletion.CASCADE, to='taxonomy.genus')),
            ],
            options={
                'verbose_name_plural': 'Species',
            },
        ),
        migrations.CreateModel(
            name='Subfamily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the scientific name', max_length=100)),
                ('common_name', models.CharField(help_text='Enter the common name', max_length=100)),
                ('authority', models.CharField(help_text='Enter the authority', max_length=100)),
                ('family', models.ForeignKey(help_text='Select the family to which this subfamily belongs', on_delete=django.db.models.deletion.CASCADE, to='taxonomy.family')),
            ],
            options={
                'verbose_name_plural': 'Subfamilies',
            },
        ),
        migrations.CreateModel(
            name='Tribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the scientific name', max_length=100)),
                ('common_name', models.CharField(help_text='Enter the common name', max_length=100)),
                ('authority', models.CharField(help_text='Enter the authority', max_length=100)),
                ('subfamily', models.ForeignKey(help_text='Select the subfamily to which this tribe belongs', on_delete=django.db.models.deletion.CASCADE, to='taxonomy.subfamily')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subspecies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the scientific name', max_length=100)),
                ('common_name', models.CharField(help_text='Enter the common name', max_length=100)),
                ('authority', models.CharField(help_text='Enter the authority', max_length=100)),
                ('mona', models.DecimalField(blank=True, decimal_places=2, help_text="Enter the MONA (Hodges) # for the subspecies (Lepidoptera only). If it lacks its own MONA #, use the nominate species' #", max_digits=8, null=True)),
                ('p3', models.DecimalField(blank=True, decimal_places=2, help_text="Enter the P3 (Pohl, Patterson, Pelham 2016) # for the subspecies (Lepidoptera only). If it lacks its own P3 #, use the nominate species' #", max_digits=8, null=True)),
                ('species', models.ForeignKey(help_text='Select the species to which this subspecies belongs', on_delete=django.db.models.deletion.CASCADE, to='taxonomy.species')),
            ],
            options={
                'verbose_name_plural': 'Subspecies',
            },
        ),
        migrations.AddField(
            model_name='genus',
            name='tribe',
            field=models.ForeignKey(help_text='Select the tribe to which this genus belongs', on_delete=django.db.models.deletion.CASCADE, to='taxonomy.tribe'),
        ),
        migrations.AddField(
            model_name='family',
            name='order',
            field=models.ForeignKey(help_text='Select the order to which this family belongs', on_delete=django.db.models.deletion.CASCADE, to='taxonomy.order'),
        ),
    ]
