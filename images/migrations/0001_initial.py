# Generated by Django 3.2.6 on 2021-08-19 15:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pages', '0001_initial'),
        ('geography', '0006_alter_locality_name'),
        ('taxonomy', '0002_auto_20210807_2253'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlantImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a short title for the image', max_length=100)),
                ('caption', models.TextField(help_text='Enter a caption for the image')),
                ('alt_text', models.TextField(help_text='Enter alternative text for the image')),
                ('datetime', models.DateTimeField(help_text='Enter the date and time the image was taken')),
                ('other_notes', models.TextField(blank=True, help_text='Enter any other notes about this image')),
                ('image', models.FileField(upload_to='plant-photos')),
                ('latin_name', models.CharField(blank=True, help_text='Enter the scientific name of the plant, if known', max_length=100)),
                ('common_name', models.CharField(blank=True, help_text='Enter the common name of the plant, if known', max_length=100)),
                ('collecting_trip', models.ForeignKey(blank=True, help_text='Select the collecting trip during which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plant_images', to='geography.collectingtrip')),
                ('country', models.ForeignKey(blank=True, help_text='Select the country in which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plant_images', to='geography.country')),
                ('county', models.ForeignKey(blank=True, help_text='Select the county in which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plant_images', to='geography.county')),
                ('gps', models.ForeignKey(blank=True, help_text='Select the GPS coordinates at which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plant_images', to='geography.gps')),
                ('locality', models.ForeignKey(blank=True, help_text='Select the locality at which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plant_images', to='geography.locality')),
                ('species_page', models.ManyToManyField(help_text='Select the species pages(s) to which this plant image should belong', related_name='plant_images', to='pages.SpeciesPage')),
                ('state', models.ForeignKey(blank=True, help_text='Select the state in which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plant_images', to='geography.state')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InsectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a short title for the image', max_length=100)),
                ('caption', models.TextField(help_text='Enter a caption for the image')),
                ('alt_text', models.TextField(help_text='Enter alternative text for the image')),
                ('datetime', models.DateTimeField(help_text='Enter the date and time the image was taken')),
                ('other_notes', models.TextField(blank=True, help_text='Enter any other notes about this image')),
                ('image', models.FileField(upload_to='insect-photos')),
                ('identified', models.BooleanField(help_text='Check this box if the insect in the image has been identified')),
                ('sex', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('unknown', 'unknown')], default='unknown', help_text='Select the sex of the insect in the image', max_length=10)),
                ('stage', models.CharField(choices=[('egg', 'egg'), ('larva', 'larva'), ('nymph', 'nymph'), ('pupa', 'pupa'), ('adult', 'adult')], default='adult', help_text='Select the stage of the insect in the image', max_length=10)),
                ('status', models.CharField(choices=[('wild', 'wild'), ('reared', 'reared'), ('bred', 'bred')], default='wild', help_text='Select the status of the insect in the image', max_length=10)),
                ('collecting_trip', models.ForeignKey(blank=True, help_text='Select the collecting trip during which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insect_mages', to='geography.collectingtrip')),
                ('country', models.ForeignKey(blank=True, help_text='Select the country in which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insect_images', to='geography.country')),
                ('county', models.ForeignKey(blank=True, help_text='Select the county in which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insect_images', to='geography.county')),
                ('gps', models.ForeignKey(blank=True, help_text='Select the GPS coordinates at which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insect_images', to='geography.gps')),
                ('locality', models.ForeignKey(blank=True, help_text='Select the locality at which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insect_images', to='geography.locality')),
                ('species', models.ForeignKey(blank=True, help_text='Select the species in the image, if it is identified', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insect_images', to='taxonomy.species')),
                ('species_page', models.ForeignKey(blank=True, help_text='Select the species page this images belongs to, if it is identified', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insect_images', to='pages.speciespage')),
                ('state', models.ForeignKey(blank=True, help_text='Select the state in which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='insect_images', to='geography.state')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HabitatImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a short title for the image', max_length=100)),
                ('caption', models.TextField(help_text='Enter a caption for the image')),
                ('alt_text', models.TextField(help_text='Enter alternative text for the image')),
                ('datetime', models.DateTimeField(help_text='Enter the date and time the image was taken')),
                ('other_notes', models.TextField(blank=True, help_text='Enter any other notes about this image')),
                ('image', models.FileField(upload_to='habitat-photos')),
                ('collecting_trip', models.ForeignKey(blank=True, help_text='Select the collecting trip during which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='habitat_images', to='geography.collectingtrip')),
                ('country', models.ForeignKey(blank=True, help_text='Select the country in which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='habitat_images', to='geography.country')),
                ('county', models.ForeignKey(blank=True, help_text='Select the county in which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='habitat_images', to='geography.county')),
                ('gps', models.ForeignKey(blank=True, help_text='Select the GPS coordinates at which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='habitat_images', to='geography.gps')),
                ('locality', models.ForeignKey(blank=True, help_text='Select the locality at which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='habitat_images', to='geography.locality')),
                ('species_page', models.ManyToManyField(help_text='Select the species page(s) to which this habitat image should belong', related_name='habitat_images', to='pages.SpeciesPage')),
                ('state', models.ForeignKey(blank=True, help_text='Select the state in which the image was taken', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='habitat_images', to='geography.state')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
